from datacenter.models import Dish, User
import random
import dotenv
import os
import telebot


def add_new_user(message):
    chat_id = message.from_user.id
    if not User.objects.filter(chat_id=chat_id).exists():
        username = str(message.from_user.username)
        new_user = User(chat_id=chat_id, user_name=username)
        new_user.save()


def set_user_price(chat_id, price):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    try:
        user = User.objects.get(chat_id=str(chat_id))
        user.price = price
        user.save()
        return True
    except User.DoesNotExist:
        return False


def toggle_user_preference(chat_id, preference_type):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Args:
        chat_id: ID —á–∞—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (str)
        preference_type: —Ç–∏–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è ('gluten_free', 'vegan', 'eco')
    Returns:
        new_value: –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (True/False) –∏–ª–∏ None –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    """
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chat_id
    user = User.objects.get(chat_id=str(chat_id))

    # –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ
    current_value = getattr(user, preference_type)
    new_value = not current_value
    setattr(user, preference_type, new_value)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    user.save()

    return new_value


def get_dish(chat_id):
    user = User.objects.get(chat_id=chat_id)
    filtered_dishes = Dish.objects.filter(
        gluten_free=user.gluten_free,
        vegan=user.vegan,
        eco=user.eco,
        price__lte=user.price,
    )
    return random.choice(filtered_dishes)


def run():
    dotenv.load_dotenv()
    token = os.getenv("TG_BOT")

    bot = telebot.TeleBot(token)
    welcome_message = "üçΩÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ FoodPlan!\n–ú—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –≤—ã–±—Ä–∞—Ç—å, —á—Ç–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è ‚Äî –≤–∫—É—Å–Ω–æ, –ø—Ä–æ—Å—Ç–æ –∏ —Å –ø–æ–ª—å–∑–æ–π üíö\n–ù–∞—á–Ω—ë–º —Å –ø–æ–¥–±–æ—Ä–∞ –±–ª—é–¥–∞?"

    @bot.message_handler(commands=['start',])
    def send_welcome(message):
        chat_id = message.from_user.id
        add_new_user(message)
        bot.send_message(chat_id, welcome_message)

    error_message = "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª üòî –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu."

    @bot.message_handler()
    def handle_text_message(message):
        if not message.text.startswith('/'):
            bot.send_message(message.chat.id, error_message)

    bot.infinity_polling()
